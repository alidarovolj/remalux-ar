import 'dart:convert';
import 'dart:developer' as developer;
import 'package:flutter/material.dart';
import 'package:flutter_embed_unity/flutter_embed_unity.dart';
import '../models/unity_models.dart';

/// –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–µ–π —Å Unity AR —Å—Ü–µ–Ω–æ–π
class UnityColorManager {
  // Callback —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π Unity
  Function(List<UnityClass>)? onClassesReceived;
  Function(UnityClass)? onClassClicked;
  Function(UnityColorChangedEvent)? onColorChanged;
  Function()? onUnityReady;
  Function(String)? onError;

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
  bool _isUnityReady = false;
  List<UnityClass> _availableClasses = [];
  UnityClass? _selectedClass;

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  bool get isUnityReady => _isUnityReady;
  List<UnityClass> get availableClasses => List.unmodifiable(_availableClasses);
  UnityClass? get selectedClass => _selectedClass;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
  void initialize() {
    developer.log('üéÆ UnityColorManager: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...', name: 'Unity');
    _setupUnityMessageListener();
  }

  /// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Unity
  void _setupUnityMessageListener() {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è –≤ –º–µ—Ç–æ–¥–µ onMessageFromUnity –≤ –≤–∏–¥–∂–µ—Ç–µ
    developer.log('üîß UnityColorManager: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π',
        name: 'Unity');
  }

  /// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Unity –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–≥–æ—Ç–æ–≤"
  void forceReady() {
    if (!_isUnityReady) {
      developer.log(
          'üö¶ UnityColorManager: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è "–≥–æ—Ç–æ–≤"',
          name: 'Unity');
      _isUnityReady = true;
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Unity
  void handleUnityMessage(dynamic message) {
    developer.log('üì® Unity -> Flutter: $message', name: 'Unity');

    try {
      if (message == null) return;

      String messageStr = message.toString();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (method:data)
      if (messageStr.contains(':')) {
        final colonIndex = messageStr.indexOf(':');
        final method = messageStr.substring(0, colonIndex).trim();
        final data = colonIndex < messageStr.length - 1
            ? messageStr.substring(colonIndex + 1).trim()
            : '';

        _processUnityEvent(method, data);
      } else {
        // –ü–æ–ø—Ä–æ–±—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ JSON
        if (messageStr.startsWith('{')) {
          final jsonData = jsonDecode(messageStr);
          if (jsonData is Map<String, dynamic>) {
            final method = jsonData['method'] as String?;
            final data = jsonData['data'];

            if (method != null) {
              _processUnityEvent(method, data?.toString() ?? '');
            }
          }
        } else {
          // –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          _processUnityEvent(messageStr, '');
        }
      }
    } catch (e) {
      developer.log('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è Unity: $e', name: 'Unity');
      onError?.call('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Unity: $e');
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π Unity
  void _processUnityEvent(String method, String data) {
    developer.log('üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è: $method, –¥–∞–Ω–Ω—ã–µ: $data',
        name: 'Unity');

    switch (method) {
      case 'onUnityReady':
        _handleUnityReady(data);
        break;
      case 'onAvailableClasses':
        _handleAvailableClasses(data);
        break;
      case 'onClassClicked':
        _handleClassClicked(data);
        break;
      case 'onColorChanged':
        _handleColorChanged(data);
        break;
      case 'error':
        _handleError(data);
        break;
      default:
        developer.log('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ Unity: $method', name: 'Unity');
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Unity
  void _handleUnityReady(String data) {
    developer.log('‚úÖ Unity –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ', name: 'Unity');
    _isUnityReady = true;
    onUnityReady?.call();

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª–∞—Å—Å—ã
    Future.delayed(const Duration(milliseconds: 500), () {
      requestAvailableClasses();
    });
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
  void _handleAvailableClasses(String data) {
    try {
      final jsonData = jsonDecode(data);
      final response = UnityClassListResponse.fromJson(jsonData);

      _availableClasses = response.classes;
      developer.log('üìù –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤: ${_availableClasses.length}',
          name: 'Unity');

      onClassesReceived?.call(_availableClasses);
    } catch (e) {
      developer.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–ø–∏—Å–∫–∞ –∫–ª–∞—Å—Å–æ–≤: $e', name: 'Unity');
      onError?.call('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–ª–∞—Å—Å–æ–≤');
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–ª–∞—Å—Å—É
  void _handleClassClicked(String data) {
    try {
      final jsonData = jsonDecode(data);
      final clickEvent = UnityClassClickedEvent.fromJson(jsonData);
      final unityClass = clickEvent.toUnityClass();

      _selectedClass = unityClass;
      developer.log('üëÜ –ö–ª–∏–∫ –ø–æ –∫–ª–∞—Å—Å—É: ${unityClass.className}',
          name: 'Unity');

      onClassClicked?.call(unityClass);
    } catch (e) {
      developer.log('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –ø–æ –∫–ª–∞—Å—Å—É: $e', name: 'Unity');
      onError?.call('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –ø–æ –æ–±—ä–µ–∫—Ç—É');
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞
  void _handleColorChanged(String data) {
    try {
      final jsonData = jsonDecode(data);
      final colorEvent = UnityColorChangedEvent.fromJson(jsonData);

      developer.log(
          'üé® –¶–≤–µ—Ç –∏–∑–º–µ–Ω–µ–Ω: ${colorEvent.className} -> ${colorEvent.color}',
          name: 'Unity');

      // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤
      _updateClassColor(colorEvent.classId, colorEvent.color);

      onColorChanged?.call(colorEvent);
    } catch (e) {
      developer.log('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞: $e', name: 'Unity');
      onError?.call('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞');
    }
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ Unity
  void _handleError(String data) {
    developer.log('‚ùå –û—à–∏–±–∫–∞ Unity: $data', name: 'Unity');
    onError?.call(data);
  }

  /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –∫–ª–∞—Å—Å–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ
  void _updateClassColor(int classId, String newColor) {
    final index = _availableClasses.indexWhere((c) => c.classId == classId);
    if (index != -1) {
      _availableClasses[index] =
          _availableClasses[index].copyWith(currentColor: newColor);

      // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å, –µ—Å–ª–∏ —ç—Ç–æ –æ–Ω
      if (_selectedClass?.classId == classId) {
        _selectedClass = _selectedClass!.copyWith(currentColor: newColor);
      }
    }
  }

  // ============ –ö–û–ú–ê–ù–î–´ –í UNITY ============

  /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
  void setClassColor(int classId, Color color) {
    if (!_isUnityReady) {
      developer.log('‚ö†Ô∏è Unity –Ω–µ –≥–æ—Ç–æ–≤, –æ—Ç–ª–æ–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ setClassColor',
          name: 'Unity');
      onError?.call('Unity –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      return;
    }

    try {
      final command = SetClassColorCommand.fromColor(classId, color);
      final message = command.toJsonString();

      developer.log('üé® Flutter -> Unity: SetClassColorFromFlutter($message)',
          name: 'Unity');

      sendToUnity(
        'AsyncSegmentationManager',
        'SetClassColorFromFlutter',
        message,
      );

      developer.log('‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Ü–≤–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Unity', name: 'Unity');
    } catch (e) {
      developer.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ü–≤–µ—Ç–∞ –≤ Unity: $e', name: 'Unity');
      onError?.call('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ü–≤–µ—Ç –≤ Unity');
    }
  }

  /// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
  void requestAvailableClasses() {
    if (!_isUnityReady) {
      developer.log('‚ö†Ô∏è Unity –Ω–µ –≥–æ—Ç–æ–≤, –æ—Ç–ª–æ–∂–µ–Ω –∑–∞–ø—Ä–æ—Å –∫–ª–∞—Å—Å–æ–≤', name: 'Unity');
      return;
    }

    try {
      developer.log('üìù Flutter -> Unity: GetAvailableClassesFromFlutter',
          name: 'Unity');

      sendToUnity(
        'AsyncSegmentationManager',
        'GetAvailableClassesFromFlutter',
        '',
      );

      developer.log('‚úÖ –ó–∞–ø—Ä–æ—Å –∫–ª–∞—Å—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Unity', name: 'Unity');
    } catch (e) {
      developer.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫–ª–∞—Å—Å–æ–≤: $e', name: 'Unity');
      onError?.call('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤');
    }
  }

  /// –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ü–≤–µ—Ç–∞
  void resetColors() {
    if (!_isUnityReady) {
      developer.log('‚ö†Ô∏è Unity –Ω–µ –≥–æ—Ç–æ–≤, –æ—Ç–ª–æ–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ resetColors',
          name: 'Unity');
      onError?.call('Unity –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      return;
    }

    try {
      developer.log('üîÑ Flutter -> Unity: ResetColorsFromFlutter',
          name: 'Unity');

      sendToUnity(
        'AsyncSegmentationManager',
        'ResetColorsFromFlutter',
        '',
      );

      developer.log('‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Å–±—Ä–æ—Å–∞ —Ü–≤–µ—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Unity',
          name: 'Unity');

      // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      _selectedClass = null;
    } catch (e) {
      developer.log('‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ —Ü–≤–µ—Ç–æ–≤: $e', name: 'Unity');
      onError?.call('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å —Ü–≤–µ—Ç–∞');
    }
  }

  /// –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤ —Ä–µ–∂–∏–º –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤
  void showAllClasses() {
    if (!_isUnityReady) {
      developer.log('‚ö†Ô∏è Unity –Ω–µ –≥–æ—Ç–æ–≤, –æ—Ç–ª–æ–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ showAllClasses',
          name: 'Unity');
      onError?.call('Unity –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      return;
    }

    try {
      developer.log('üëÅÔ∏è Flutter -> Unity: ShowAllClassesFromFlutter',
          name: 'Unity');

      sendToUnity(
        'AsyncSegmentationManager',
        'ShowAllClassesFromFlutter',
        '',
      );

      developer.log('‚úÖ –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Unity',
          name: 'Unity');
    } catch (e) {
      developer.log('‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤: $e', name: 'Unity');
      onError?.call('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    }
  }

  /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å
  void setSelectedClass(UnityClass? unityClass) {
    _selectedClass = unityClass;
    developer.log('üéØ –í—ã–±—Ä–∞–Ω –∫–ª–∞—Å—Å: ${unityClass?.className ?? 'null'}',
        name: 'Unity');
  }

  /// –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  void dispose() {
    developer.log('üßπ UnityColorManager: –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤', name: 'Unity');

    onClassesReceived = null;
    onClassClicked = null;
    onColorChanged = null;
    onUnityReady = null;
    onError = null;

    _isUnityReady = false;
    _availableClasses.clear();
    _selectedClass = null;
  }
}
